
----------------------------------------------------------------

UI = data + style + behavior

----------------------------------------------------------------

why do we need "JavaScript" with HTML-page ?

using browser provided apis, 
    javascript programs can do any dynamic actions on HTML-page

browser apis ==> w3c recommendations, implemented natively by browsers 
and abstracted as javascript objects &functions


    Document Object Model (DOM)
    -----------------------------
     -> can change element's inner content
     -> can change element's style
     -> can change element's attributes/properties
     -> can listen event(s) on element(s) then react with content
     -> can validate form-field before submit
     -> can create rich ui components like calendar,auto-complete fields...

     Timer API
     ------------   
     -> can perform any actions on timeout/time-interval

    XMLHttpRequest / Fetch API
    --------------------------
     -> can send HTTP-request async to api-server.


-------------------------------------------------------------------

To be front-end developer ,

You must know,

    => HTML + CSS + JavaScript + ( Browser Apis )


------------------------------------------------------------------



Challanges while developing Web-UI using plain-javascript-code ( Your-code )?


-> browser compatability issues
-> performance issues should handle manually
-> memory issues should handle manually
-> data-binding should do manually
-> too much code
-> code re-usability
...



Legacy Solution(s)

-> Using server-side page technologies

    e.g Java => JSP, freemarker, thymeleaf
        .Net => ASP.NET
        PHP


limitations on server-side pages

 -> on very request, server-side need construct new-page keeping client's state
 -> increase n/w bandwidth & latency
 -> on every response, browser re-loads page



 Modern Solution(s)

 -> build dynamic web page in browser-side


 How ?

    -> Use Advanced javascript concepts
    -> Modern Browser(s)

    +

     -> third-party's JavaScript libraries & frameworks ( Someone's JavaScript code )



third-party's libraries and frameworks

1. jquery.js => DOM & XHR utility functions

MVC pattern based libraries & frameworks


2. backbone.js
3. knockout.js
4. Ember.js
5. Dojo
6. Ext.JS from sencha ( commercial )
7. Angular.js from google team
...


component pattern
----------------------------

How to create UI components / Custom Elements


2 ways  

1. browser Apis

    - CustomElement
    - Template
    - Shadow DOM

2. third-party javascript lib  & frameworks


    1. React.js from facebook
    2. Angular from google-team
    3. Vue.js
    ...

----------------------------------------------------------    


